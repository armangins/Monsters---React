{"version":3,"sources":["components/card/card-component.jsx","components/cards-list/card-list-component.jsx","components/search/search-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","user","name","src","id","alt","email","CardList","users","map","Search","placeholder","changeHandler","onChange","type","App","e","setState","searchField","target","value","state","fetch","then","response","json","this","filteredUsers","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,6BAAKD,EAAME,KAAKC,OAChB,qBAAKC,IAAG,+BAA0BJ,EAAME,KAAKG,IAAMC,IAAI,SACvD,4BAAKN,EAAME,KAAKK,YCJTC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SAEGD,EAAMS,MAAMC,KAAI,SAACR,GAChB,OAAO,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKG,UCNlBM,G,MAAS,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAYC,EAAmB,EAAnBA,cAClC,OACE,uBACEZ,UAAU,SACVa,SAAUD,EACVD,YAAaA,EACbG,KAAK,WCiCIC,G,wDApCb,aAAe,IAAD,8BACZ,gBAOFH,cAAgB,SAACI,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAPtC,EAAKC,MAAQ,CACXb,MAAO,GACPU,YAAa,IAJH,E,qDAYd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACf,GAAD,OAAW,EAAKS,SAAS,CAAET,MAAOA,S,oBAG5C,WAAU,IAAD,EACwBkB,KAAKL,MAA5Bb,EADD,EACCA,MAAOU,EADR,EACQA,YACTS,EAAgBnB,EAAMoB,QAAO,SAAC3B,GAClC,OAAOA,EAAKC,KAAK2B,cAAcC,SAASZ,EAAYW,kBAGtD,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,CACEY,cAAec,KAAKd,cACpBD,YAAY,gBAEd,cAAC,EAAD,CAAUH,MAAOmB,W,GA/BPI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c60b5b0a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <h1>{props.user.name}</h1>\r\n      <img src={`https://robohash.org/${props.user.id}`} alt=\"user\"/>\r\n      <p>{ props.user.email }</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list.css\";\r\nimport { Card } from \"../card/card-component\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n \r\n      {props.users.map((user) => {\r\n        return <Card key={user.id} user={user}></Card>\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../search/search.css\";\r\n\r\nexport const Search = ({placeholder,changeHandler}) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      onChange={changeHandler}\r\n      placeholder={placeholder}\r\n      type=\"text\"\r\n    />\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport { CardList } from \"./components/cards-list/card-list-component\";\nimport { Search } from \"./components/search/search-component\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: [],\n      searchField: \"\",\n    };\n  }\n\n  changeHandler = (e)=>{\n    this.setState({ searchField: e.target.value });\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ users: users }));\n  }\n\n  render() {\n    const { users, searchField } = this.state;\n    const filteredUsers = users.filter((user) => {\n      return user.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    return (\n      <div className=\"App\">\n        <Search\n          changeHandler={this.changeHandler}\n          placeholder=\"Search user\"\n        ></Search>\n        <CardList users={filteredUsers}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}